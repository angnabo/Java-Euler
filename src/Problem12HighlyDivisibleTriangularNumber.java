import java.util.ArrayList;
import java.util.List;
/**
 * The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
 *
 * 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 *
 * Let us list the factors of the first seven triangle numbers:
 *
 *  1: 1
 *  3: 1,3
 *  6: 1,2,3,6
 * 10: 1,2,5,10
 * 15: 1,3,5,15
 * 21: 1,3,7,21
 * 28: 1,2,4,7,14,28
 * We can see that 28 is the first triangle number to have over five divisors.
 *
 * What is the value of the first triangle number to have over five hundred divisors?
 * Answer: 76576500
 *
 * @author Anzhelika Nabozhina
 * @version 23/06/17.
 */
public class Problem12HighlyDivisibleTriangularNumber {

    /**
     * Returns the first triangular number to have 500 divisors.
     * @return long triangle number with 500 divisors.
     */
    public long triangularNumbers() {
        List<Long> triangulars = new ArrayList<>();
        int n = 1;
        long triangularNum = 1;
        while (triangulars.size() <= 500) {
            triangularNum = n*(n+1)/2;//gets nth triangular number term
            triangulars = MathFunctions.getFactors(triangularNum);
            n++;
        }
        return triangularNum;
    }

    public static void main(String[] args) {
        Problem12HighlyDivisibleTriangularNumber prob4 = new Problem12HighlyDivisibleTriangularNumber();
        System.out.println(prob4.triangularNumbers());
    }
}
