import java.util.ArrayList;
/**
 * Each new term in the Fibonacci sequence is generated by adding the previous
 * two terms. By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not
 * exceed four million, find the sum of the even-valued terms.
 * Answer: 4613732
 * @author Anzhelika Nabozhina
 * @version 23/06/17.
 */
public class Problem02EvenFibbonacci {

    /**
     * Returns the sum of even Fibonacci numbers below a given number
     * @param num integer below which to add even Fibonacci numbers
     * @return total sum of even Fibonacci numbers
     */
    public int evenFibonacci(int num) {
        ArrayList<Integer> fibAr = new ArrayList<Integer>();
        fibAr.add(1);
        fibAr.add(1);
        int ttlSum = 0;
        while (fibAr.get(fibAr.size()-1) < num) {
            fibAr.add(fibAr.get(fibAr.size()-1) + fibAr.get(fibAr.size()-2));
        }
        for (int i = 1; i < fibAr.size()-1; i++) {
            if (fibAr.get(i) % 2 == 0) {
                ttlSum += fibAr.get(i);
            }
        }
        return ttlSum;
    }

    public static void main(String[] args) {
        Problem02EvenFibbonacci prob1 = new Problem02EvenFibbonacci();
        System.out.println(prob1.evenFibonacci(4000000));
    }

}
